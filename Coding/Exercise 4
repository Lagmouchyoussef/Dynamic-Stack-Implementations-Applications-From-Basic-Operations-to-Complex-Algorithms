#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>
#include <ctype.h>

typedef struct CharNode {
    char data;
    struct CharNode* next;
} CharNode;

typedef struct {
    CharNode* top;
} CharStack;

void initStack(CharStack* s) {
    s->top = NULL;
}

bool isEmpty(CharStack* s) {
    return s->top == NULL;
}

void push(CharStack* s, char c) {
    CharNode* newNode = (CharNode*)malloc(sizeof(CharNode));
    newNode->data = tolower(c);
    newNode->next = s->top;
    s->top = newNode;
}

char pop(CharStack* s) {
    if (isEmpty(s)) return '\0';
    
    CharNode* temp = s->top;
    char popped = temp->data;
    s->top = s->top->next;
    free(temp);
    return popped;
}

void cleanStack(CharStack* s) {
    while (!isEmpty(s)) {
        pop(s);
    }
}

bool isPalindrome(const char* str) {
    CharStack s;
    initStack(&s);
    int len = strlen(str);
  
    for (int i = 0; i < len/2; i++) {
        if (isalpha(str[i])) {  
            push(&s, str[i]);
        }
    }
    
    
    int start = (len % 2 == 0) ? len/2 : len/2 + 1;
    for (int i = start; i < len; i++) {
        if (isalpha(str[i])) {  
            if (pop(&s) != tolower(str[i])) {
                cleanStack(&s);
                return false;
            }
        }
    }
    
    cleanStack(&s);
    return true;
}

char* readLine() {
    size_t size = 16;  
    char* str = malloc(size);
    size_t len = 0;
    int c;
    
    while ((c = getchar()) != '\n' && c != EOF) {
        if (len == size - 1) {
            size *= 2;
            str = realloc(str, size);
        }
        str[len++] = c;
    }
    str[len] = '\0';
    return str;
}

int main() {
    printf("Entrez un mot/phrase: ");
    char* input = readLine();
    
    if (isPalindrome(input)) {
        printf("\"%s\" est un palindrome.\n", input);
    } else {
        printf("\"%s\" n est PAS un palindrome.\n", input);
    }
    
    free(input);
    
    printf("\nTests automatiques:\n");
    char* tests[] = {"radar", "hello", "A man a plan a canal Panama", "Esope reste ici et se repose"};
    for (int i = 0; i < 4; i++) {
        printf("%-40s -> %s\n", tests[i], 
              isPalindrome(tests[i]) ? "OK" : "Echec");
    }
    
    return 0;
}